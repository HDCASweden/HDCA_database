'Christos Samakovlis',
'Erik Sundström')
# terms <- c('Czarnewski')
all_info <- future_lapply(terms , function(x){
message(paste0('processing:\t',x))
x <- fix_names(x)
# search_topic <- EUtilsQuery(x)
search_query <- EUtilsSummary(x)
records <- EUtilsGet(search_query)
return(records)
})
names(all_info) <- terms
res <- lapply(all_info , function(x){
journals <- reformat_journal_name(x@Title)
print(journals)
xxx <- as.numeric(IF$`Journal Impact Factor`[ match( journals , IF$`Full Journal Title` ) ])
return( setNames( xxx , journals )  )
})
names(res) <- terms
min_if <- 5
year_cutoff <- 2010
topN <- 20
i='Emma Lundberg'
for(i in names(all_info)){
message(paste0("Proscessing: ",i))
sel2 <- all_info[[i]]@YearPubmed >= year_cutoff
if_cutoff <- sort(res[[i]][sel2],decreasing = T)[ topN ]
sel <- res[[i]] >= if_cutoff
sel3 <- res[[i]] >= min_if
sel4 <- !grepl("Publisher[ ]Correction|Author[ ]Correction",all_info[[i]]@ArticleTitle)
tmp <- all_info[[i]]
filters <- cbind(sel2,sel,sel3,sel4,
PMID=tmp@PMID,
YEAR=tmp@YearPubmed,
IF=res[[i]],
JOURNAL=tmp@Title,
ARTICLE=tmp@ArticleTitle)
sels <- grep( "1", as.logical(filters[,1])*as.logical(filters[,2])*as.logical(filters[,3])*as.logical(filters[,4]) )
all_pubs[[i]] <- filters[sels,]
con <- file(paste0("papers_",i,'.txt'))
sink(con,append=TRUE)
sink(con,append=TRUE,type="message")
for(j in sels){
k <- tmp@PMID[j]
tmp2 <- tmp@Author[[k]]
tmp2[is.na(tmp2)] <- ""
tmp2$LastName <- paste0(tmp2$CollectiveName,tmp2$LastName)
x <- paste0(paste0( tmp2$LastName ," ", tmp2$Initials ,collapse = ", "),". ")
x1 <- paste0(sub(".* ","",i), " ", substring(sub(" .*","",i), 1, 1) )
if( grepl( paste0(x1,"[,.] "), x ) ){
x <- gsub(x1 , paste0("<u>",x1,"</u>"), x)
}
cat( "<p>" )
cat( paste0( x ) )
cat( paste0("<b>", tmp@ArticleTitle[[j]],"</b>") )
cat( "\n" )
cat( paste0("<a href='https://doi.org/",tmp@DOI[[j]],"'>") )
cat( paste0( tmp@Title[[j]]) )
cat( "</a>" )
cat( paste0( " (" , month.abb[ tmp@MonthPubmed[[j]] ]," ", tmp@YearPubmed[[j]],") " ) )
cat( "</p>" )
cat( "\n\n" )
}
sink()
sink(type="message")
}
all_info
all_info$`Joakim Lundeberg`@Citations
min_if <- 5
year_cutoff <- 2010
topN <- 20
all_pubs <- list()
i='Emma Lundberg'
for(i in names(all_info)){
message(paste0("Proscessing: ",i))
sel2 <- all_info[[i]]@YearPubmed >= year_cutoff
if_cutoff <- sort(res[[i]][sel2],decreasing = T)[ topN ]
sel <- res[[i]] >= if_cutoff
sel3 <- res[[i]] >= min_if
sel4 <- !grepl("Publisher[ ]Correction|Author[ ]Correction",all_info[[i]]@ArticleTitle)
tmp <- all_info[[i]]
filters <- cbind(sel2,sel,sel3,sel4,
PMID=tmp@PMID,
YEAR=tmp@YearPubmed,
IF=res[[i]],
JOURNAL=tmp@Title,
ARTICLE=tmp@ArticleTitle)
sels <- grep( "1", as.logical(filters[,1])*as.logical(filters[,2])*as.logical(filters[,3])*as.logical(filters[,4]) )
# all_pubs[[i]] <- filters[sels,]
con <- file(paste0("../compiled/publications/",i,'.txt'))
sink(con,append=TRUE)
sink(con,append=TRUE,type="message")
for(j in sels){
k <- tmp@PMID[j]
tmp2 <- tmp@Author[[k]]
tmp2[is.na(tmp2)] <- ""
tmp2$LastName <- paste0(tmp2$CollectiveName,tmp2$LastName)
x <- paste0(paste0( tmp2$LastName ," ", tmp2$Initials ,collapse = ", "),". ")
x1 <- paste0(sub(".* ","",i), " ", substring(sub(" .*","",i), 1, 1) )
if( grepl( paste0(x1,"[,.] "), x ) ){
x <- gsub(x1 , paste0("<u>",x1,"</u>"), x)
}
cat( "<p>" )
cat( paste0( x ) )
cat( paste0("<b>", tmp@ArticleTitle[[j]],"</b>") )
cat( "\n" )
cat( paste0("<a href='https://doi.org/",tmp@DOI[[j]],"'>") )
cat( paste0( tmp@Title[[j]]) )
cat( "</a>" )
cat( paste0( " (" , month.abb[ tmp@MonthPubmed[[j]] ]," ", tmp@YearPubmed[[j]],") " ) )
cat( "</p>" )
cat( "\n\n" )
}
sink()
sink(type="message")
}
mx_api_content
library(medrxivr)
options(timeout=10000000)
mx_api_content
library(medrxivr)
options(timeout=10000000)
preprint_data <- mx_api_content(server = "biorxiv",from_date = "2021-12-31")
options(timeout = 10003)
terms_use <- c("Lundeberg, J[.]","Lundberg, E[.]","Nilsson, M[.]","Linnarsson, S[.]","Samakovlis, C[.]","Sundström, E[.]"  )
res <- preprint_data [ grepl( paste0(terms_use,collapse = "|") , preprint_data$authors) ,]
res$authors
res$date
preprint_data
res <- download.file(url = 'https://api.biorxiv.org/details/biorxiv/2018-08-21/2018-08-28/45',
destfile = 'tmp.txt')
res
install.packages('scholar')
library(scholar)
res <- scholar::get_publications(id = 'kDUHVMIAAAAJ')
res
all_pubs
min_if <- 5
year_cutoff <- 2010
topN <- 20
all_pubs <- list()
i='Emma Lundberg'
for(i in names(all_info)){
message(paste0("Proscessing: ",i))
sel2 <- all_info[[i]]@YearPubmed >= year_cutoff
if_cutoff <- sort(res[[i]][sel2],decreasing = T)[ topN ]
sel <- res[[i]] >= if_cutoff
sel3 <- res[[i]] >= min_if
sel4 <- !grepl("Publisher[ ]Correction|Author[ ]Correction",all_info[[i]]@ArticleTitle)
tmp <- all_info[[i]]
filters <- cbind(sel2,sel,sel3,sel4,
PMID=tmp@PMID,
YEAR=tmp@YearPubmed,
IF=res[[i]],
JOURNAL=tmp@Title,
ARTICLE=tmp@ArticleTitle)
sels <- grep( "1", as.logical(filters[,1])*as.logical(filters[,2])*as.logical(filters[,3])*as.logical(filters[,4]) )
all_pubs[[i]] <- filters[sels,]
con <- file(paste0("../compiled/publications/",i,'.txt'))
sink(con,append=TRUE)
sink(con,append=TRUE,type="message")
for(j in sels){
k <- tmp@PMID[j]
tmp2 <- tmp@Author[[k]]
tmp2[is.na(tmp2)] <- ""
tmp2$LastName <- paste0(tmp2$CollectiveName,tmp2$LastName)
x <- paste0(paste0( tmp2$LastName ," ", tmp2$Initials ,collapse = ", "),". ")
x1 <- paste0(sub(".* ","",i), " ", substring(sub(" .*","",i), 1, 1) )
if( grepl( paste0(x1,"[,.] "), x ) ){
x <- gsub(x1 , paste0("<u>",x1,"</u>"), x)
}
cat( "<p>" )
cat( paste0( x ) )
cat( paste0("<b>", tmp@ArticleTitle[[j]],"</b>") )
cat( "\n" )
cat( paste0("<a href='https://doi.org/",tmp@DOI[[j]],"'>") )
cat( paste0( tmp@Title[[j]]) )
cat( "</a>" )
cat( paste0( " (" , month.abb[ tmp@MonthPubmed[[j]] ]," ", tmp@YearPubmed[[j]],") " ) )
cat( "</p>" )
cat( "\n\n" )
}
sink()
sink(type="message")
}
all_pubs
all_pubs2 <- as.data.frame( do.call( rbind , all_pubs ) )
all_pubs2 <- all_pubs2[ ,-c(1:4) ]
all_pubs2 <- all_pubs2[ ! duplicated(all_pubs2) , ]
all_pubs2 <- all_pubs2[ as.numeric( all_pubs2$IF ) > 10 , ]
all_pubs2 <- all_pubs2[ as.numeric( all_pubs2$YEAR ) > 2019 , ]
all_pubs2 <- all_pubs2[ order( all_pubs2$YEAR , decreasing = T) , ]
all_pubs2$JOURNAL
all_pubs2
all_pubs2 <- as.data.frame( do.call( rbind , all_pubs ) )
all_pubs2 <- all_pubs2[ ,-c(1:4) ]
all_pubs2 <- all_pubs2[ ! duplicated(all_pubs2) , ]
all_pubs2 <- all_pubs2[ as.numeric( all_pubs2$IF ) > 10 , ]
all_pubs2 <- all_pubs2[ as.numeric( all_pubs2$YEAR ) > 2019 , ]
# all_pubs2 <- all_pubs2[ order( all_pubs2$YEAR , decreasing = T) , ]
all_pubs2$JOURNAL
all_pubs2
all_pubs2 <- as.data.frame( do.call( rbind , all_pubs ) )
all_pubs2
all_pubs
min_if <- 5
year_cutoff <- 2010
topN <- 20
all_pubs <- all_info
i='Emma Lundberg'
for(i in names(all_info)){
message(paste0("Proscessing: ",i))
sel2 <- all_info[[i]]@YearPubmed >= year_cutoff
if_cutoff <- sort(res[[i]][sel2],decreasing = T)[ topN ]
sel <- res[[i]] >= if_cutoff
sel3 <- res[[i]] >= min_if
sel4 <- !grepl("Publisher[ ]Correction|Author[ ]Correction",all_info[[i]]@ArticleTitle)
tmp <- all_info[[i]]
filters <- cbind(sel2,sel,sel3,sel4,
PMID=tmp@PMID,
YEAR=tmp@YearPubmed,
IF=res[[i]],
JOURNAL=tmp@Title,
ARTICLE=tmp@ArticleTitle)
sels <- grep( "1", as.logical(filters[,1])*as.logical(filters[,2])*as.logical(filters[,3])*as.logical(filters[,4]) )
all_pubs[[i]] <- filters[sels,]
con <- file(paste0("../compiled/publications/",i,'.txt'))
sink(con,append=TRUE)
sink(con,append=TRUE,type="message")
for(j in sels){
k <- tmp@PMID[j]
tmp2 <- tmp@Author[[k]]
tmp2[is.na(tmp2)] <- ""
tmp2$LastName <- paste0(tmp2$CollectiveName,tmp2$LastName)
x <- paste0(paste0( tmp2$LastName ," ", tmp2$Initials ,collapse = ", "),". ")
x1 <- paste0(sub(".* ","",i), " ", substring(sub(" .*","",i), 1, 1) )
if( grepl( paste0(x1,"[,.] "), x ) ){
x <- gsub(x1 , paste0("<u>",x1,"</u>"), x)
}
cat( "<p>" )
cat( paste0( x ) )
cat( paste0("<b>", tmp@ArticleTitle[[j]],"</b>") )
cat( "\n" )
cat( paste0("<a href='https://doi.org/",tmp@DOI[[j]],"'>") )
cat( paste0( tmp@Title[[j]]) )
cat( "</a>" )
cat( paste0( " (" , month.abb[ tmp@MonthPubmed[[j]] ]," ", tmp@YearPubmed[[j]],") " ) )
cat( "</p>" )
cat( "\n\n" )
}
sink()
sink(type="message")
}
all_pubs2
download.file(
url = 'https://api.biorxiv.org/details/biorxiv/2022-01-01/2022-02-01/45',
destfile = '../data/tmp.txt')
Sys.Date()
res <- jsonlite::fromJSON('../data/tmp.txt')
res
dim(res)
dim(res$collection)
res <- jsonlite::fromJSON('../data/tmp.txt')$collection
Sys.Date()
Sys.Date() - 2
Sys.Date() - 700
Sys.Date() - 30*6
download.file(
url = paste0(baseurl,Sys.Date() - 30*6,'/',Sys.Date(),'/45'),
destfile = '../data/tmp.txt')
baseurl <- 'https://api.biorxiv.org/details/biorxiv/'
download.file(
url = paste0(baseurl,Sys.Date() - 30*6,'/',Sys.Date(),'/45'),
destfile = '../data/tmp.txt')
download.file(
url = paste0(baseurl,Sys.Date() - 30*6,'/',Sys.Date(),'/'),
destfile = '../data/tmp.txt')
download.file(
url = paste0(baseurl,Sys.Date() - 30*6,'/',Sys.Date(),''),
destfile = '../data/tmp.txt')
res <- jsonlite::fromJSON('../data/tmp.txt')$collection
dim(res$collection)
res <- jsonlite::fromJSON('../data/tmp.txt')$collection
dim(res)
options(timeout=10000000)
preprint_data <- mx_api_content(server = "biorxiv",from_date =  Sys.Date() - 30 )
Sys.Date() - 30
preprint_data <- mx_api_content(server = "biorxiv",from_date = Sys.Date() - 30)
options(timeout=10000000)
preprint_data <- mx_api_content(server = "biorxiv",from_date = Sys.Date() - 30)
preprint_data <- mx_api_content(server = "biorxiv",from_date = "2021-12-31")
options(timeout=10000000)
preprint_data <- mx_api_content(server = "biorxiv",from_date = as.character(Sys.Date() - 30))
terms_use <- c("Lundeberg, J[.]","Lundberg, E[.]","Nilsson, M[.]","Linnarsson, S[.]","Samakovlis, C[.]","Sundström, E[.]"  )
res <- preprint_data [ grepl( paste0(terms_use,collapse = "|") , preprint_data$authors) ,]
res
res$title
res$authors
plan(multiprocess, workers=future::availableCores()-1 )
options(future.globals.maxSize = 1500 * 1024 ^ 2)
preprint_data <- future_lapply(1:10,function(x){
return(mx_api_content(
server = "biorxiv",
from_date = as.character(Sys.Date() - 20*i),
to_date = as.character(Sys.Date() - 20*(i-1) )))
})
preprint_data <- future_lapply(1:10,function(i){
return(mx_api_content(
server = "biorxiv",
from_date = as.character(Sys.Date() - 20*i),
to_date = as.character(Sys.Date() - 20*(i-1) )))
})
preprint_data
min_if <- 5
year_cutoff <- 2010
topN <- 20
all_pubs <- list()
i='Emma Lundberg'
for(i in names(all_info)){
message(paste0("Proscessing: ",i))
sel2 <- all_info[[i]]@YearPubmed >= year_cutoff
if_cutoff <- sort(res[[i]][sel2],decreasing = T)[ topN ]
sel <- res[[i]] >= if_cutoff
sel3 <- res[[i]] >= min_if
sel4 <- !grepl("Publisher[ ]Correction|Author[ ]Correction",all_info[[i]]@ArticleTitle)
tmp <- all_info[[i]]
filters <- cbind(sel2,sel,sel3,sel4,
PMID=tmp@PMID,
YEAR=tmp@YearPubmed,
IF=res[[i]],
JOURNAL=tmp@Title,
ARTICLE=tmp@ArticleTitle)
sels <- grep( "1", as.logical(filters[,1])*as.logical(filters[,2])*as.logical(filters[,3])*as.logical(filters[,4]) )
all_pubs[[i]] <- filters[sels,]
con <- file(paste0("../compiled/publications/",i,'.txt'))
sink(con,append=TRUE)
sink(con,append=TRUE,type="message")
for(j in sels){
k <- tmp@PMID[j]
tmp2 <- tmp@Author[[k]]
tmp2[is.na(tmp2)] <- ""
tmp2$LastName <- paste0(tmp2$CollectiveName,tmp2$LastName)
x <- paste0(paste0( tmp2$LastName ," ", tmp2$Initials ,collapse = ", "),". ")
x1 <- paste0(sub(".* ","",i), " ", substring(sub(" .*","",i), 1, 1) )
if( grepl( paste0(x1,"[,.] "), x ) ){
x <- gsub(x1 , paste0("<u>",x1,"</u>"), x)
}
cat( "<p>" )
cat( paste0( x ) )
cat( paste0("<b>", tmp@ArticleTitle[[j]],"</b>") )
cat( "\n" )
cat( paste0("<a href='https://doi.org/",tmp@DOI[[j]],"'>") )
cat( paste0( tmp@Title[[j]]) )
cat( "</a>" )
cat( paste0( " (" , month.abb[ tmp@MonthPubmed[[j]] ]," ", tmp@YearPubmed[[j]],") " ) )
cat( "</p>" )
cat( "\n\n" )
}
sink()
sink(type="message")
}
all_pubs
all_pubs$`Joakim Lundeberg`
filters
sels
as.logical(filters[,1])
filters
sel2
sel
sel3
res[[i]]
res
IF
res <- lapply(all_info , function(x){
journals <- reformat_journal_name(x@Title)
print(journals)
xxx <- as.numeric(IF$`Journal Impact Factor`[ match( journals , IF$`Full Journal Title` ) ])
return( setNames( xxx , journals )  )
})
names(res) <- terms
res
min_if <- 5
year_cutoff <- 2010
topN <- 20
all_pubs <- list()
i='Emma Lundberg'
for(i in names(all_info)){
message(paste0("Proscessing: ",i))
sel2 <- all_info[[i]]@YearPubmed >= year_cutoff
if_cutoff <- sort(res[[i]][sel2],decreasing = T)[ topN ]
sel <- res[[i]] >= if_cutoff
sel3 <- res[[i]] >= min_if
sel4 <- !grepl("Publisher[ ]Correction|Author[ ]Correction",all_info[[i]]@ArticleTitle)
tmp <- all_info[[i]]
filters <- cbind(sel2,sel,sel3,sel4,
PMID=tmp@PMID,
YEAR=tmp@YearPubmed,
IF=res[[i]],
JOURNAL=tmp@Title,
ARTICLE=tmp@ArticleTitle)
sels <- grep( "1", as.logical(filters[,1])*as.logical(filters[,2])*as.logical(filters[,3])*as.logical(filters[,4]) )
all_pubs[[i]] <- filters[sels,]
con <- file(paste0("../compiled/publications/",i,'.txt'))
sink(con,append=TRUE)
sink(con,append=TRUE,type="message")
for(j in sels){
k <- tmp@PMID[j]
tmp2 <- tmp@Author[[k]]
tmp2[is.na(tmp2)] <- ""
tmp2$LastName <- paste0(tmp2$CollectiveName,tmp2$LastName)
x <- paste0(paste0( tmp2$LastName ," ", tmp2$Initials ,collapse = ", "),". ")
x1 <- paste0(sub(".* ","",i), " ", substring(sub(" .*","",i), 1, 1) )
if( grepl( paste0(x1,"[,.] "), x ) ){
x <- gsub(x1 , paste0("<u>",x1,"</u>"), x)
}
cat( "<p>" )
cat( paste0( x ) )
cat( paste0("<b>", tmp@ArticleTitle[[j]],"</b>") )
cat( "\n" )
cat( paste0("<a href='https://doi.org/",tmp@DOI[[j]],"'>") )
cat( paste0( tmp@Title[[j]]) )
cat( "</a>" )
cat( paste0( " (" , month.abb[ tmp@MonthPubmed[[j]] ]," ", tmp@YearPubmed[[j]],") " ) )
cat( "</p>" )
cat( "\n\n" )
}
sink()
sink(type="message")
}
res
all_pubs
all_pubs2 <- as.data.frame( do.call( rbind , all_pubs ) )
all_pubs2 <- all_pubs2[ ,-c(1:4) ]
all_pubs2 <- all_pubs2[ ! duplicated(all_pubs2) , ]
all_pubs2 <- all_pubs2[ as.numeric( all_pubs2$IF ) > 10 , ]
all_pubs2 <- all_pubs2[ as.numeric( all_pubs2$YEAR ) > 2019 , ]
all_pubs2 <- all_pubs2[ order( all_pubs2$YEAR , decreasing = T) , ]
all_pubs2$JOURNAL
all_pubs2
tmp <- all_info[[1]]
for(i in slotNames(tmp)){
valll <- lapply(all_info ,i=i, function(x,i) return(slot(x,i)))
print(typeof(slot(tmp,i) ))
print(typeof(valll[[1]]))
if( is.list( valll[[1]] ) ){
valll <- do.call(c,valll)
names(valll) <- sub(".*[.]","",names(valll))
slot(tmp, i) <- valll
} else {
slot(tmp, i) <- unlist(valll)
}
}
con <- file(paste0('Papers_News.txt'))
sink(con,append=TRUE)
sink(con,append=TRUE,type="message")
sink(con,append=TRUE,type="message")
cat( "<h3>RECENT PUBLICATIONS</h3>\n\n" )
for(j in match( all_pubs2$PMID , tmp@PMID ) ){
k <- tmp@PMID[j]
cat( "<p>" )
cat( paste0("<b>",tmp@YearPubmed[[j]],"-",tmp@MonthPubmed[[j]],"-",tmp@DayPubmed[[j]] ,"</b>\n") )
cat( paste0("<b>", tmp@Title[[j]] , "</b>. ") )
cat( paste0("<a href='https://doi.org/",tmp@DOI[[j]],"'>") )
cat( paste0( tmp@ArticleTitle[[j]] ) )
cat( "</a>" )
# cat( "\n" )
tmp2 <- tmp@Author[[k]]
tmp2[is.na(tmp2)] <- ""
tmp2$LastName <- paste0(tmp2$CollectiveName,tmp2$LastName)
x <- paste0(paste0( tmp2$LastName ," ", tmp2$Initials ,collapse = ", "),".")
x1 <- paste0(sub(".* ","",i), " ", substring(sub(" .*","",i), 1, 1) )
if( grepl( paste0(x1,"[,.] "), x ) ){
x <- gsub(x1 , paste0("<u>",x1,"</u>"), x)
}
cat( paste0(". ", x ) )
cat( "</p>" )
cat( "\n\n" )
}
cat( "<hr>" )
cat( "\n\n" )
sink()
sink(type="message")
con <- file(paste0('../compiled/publications/paper_news.txt'))
sink(con,append=TRUE)
sink(con,append=TRUE,type="message")
sink(con,append=TRUE,type="message")
cat( "<h3>RECENT PUBLICATIONS</h3>\n\n" )
for(j in match( all_pubs2$PMID , tmp@PMID ) ){
k <- tmp@PMID[j]
cat( "<p>" )
cat( paste0("<b>",tmp@YearPubmed[[j]],"-",tmp@MonthPubmed[[j]],"-",tmp@DayPubmed[[j]] ,"</b>\n") )
cat( paste0("<b>", tmp@Title[[j]] , "</b>. ") )
cat( paste0("<a href='https://doi.org/",tmp@DOI[[j]],"'>") )
cat( paste0( tmp@ArticleTitle[[j]] ) )
cat( "</a>" )
# cat( "\n" )
tmp2 <- tmp@Author[[k]]
tmp2[is.na(tmp2)] <- ""
tmp2$LastName <- paste0(tmp2$CollectiveName,tmp2$LastName)
x <- paste0(paste0( tmp2$LastName ," ", tmp2$Initials ,collapse = ", "),".")
x1 <- paste0(sub(".* ","",i), " ", substring(sub(" .*","",i), 1, 1) )
if( grepl( paste0(x1,"[,.] "), x ) ){
x <- gsub(x1 , paste0("<u>",x1,"</u>"), x)
}
cat( paste0(". ", x ) )
cat( "</p>" )
cat( "\n\n" )
}
cat( "<hr>" )
cat( "\n\n" )
sink()
sink(type="message")
